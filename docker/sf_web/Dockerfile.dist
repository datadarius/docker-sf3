FROM ubuntu:xenial

LABEL org.nerdpress.version="1-beta"
LABEL vendor="nerdpress.org"
LABEL org.nerdpress.release-date="2017-02-14"
LABEL org.nerdpress.version.is-production="false"

ENV DEBIAN_FRONTEND noninteractive
# Todo, set PHP_VERSION ENV through a php query.

#Append software required during runtime here.
RUN BASE_PKGS="ca-certificates locales zsh bash curl vim git zip mcrypt htop ssh-client sudo" \
    && apt-get update && apt-get install -y --no-install-recommends $BASE_PKGS \
    && apt-get autoremove -y && apt-get clean -y \
    && locale-gen en_US.UTF-8 \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

#Change your timezone below. Full list of timezones: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
RUN echo Europe/Berlin > /etc/timezone && dpkg-reconfigure --frontend noninteractive tzdata

#Add Ondrej Sury PPAs (https://launchpad.net/~ondrej) and install Apache+PHP
RUN WEB_PKGS="apache2 nghttp2 php7.1 php7.1-mysql php7.1-sqlite php7.1-intl php-zip php-json php-curl php-xml libapache2-mod-php7.1" \
    && echo deb http://ppa.launchpad.net/ondrej/apache2/ubuntu xenial main > /etc/apt/sources.list.d/ondrej-apache2.list \
    && echo deb http://ppa.launchpad.net/ondrej/php/ubuntu xenial main > /etc/apt/sources.list.d/ondrej-php.list \
    && apt-key adv --keyserver keyserver.ubuntu.com --recv-key E5267A6C \
    && apt-get update && apt-get install -y --no-install-recommends $WEB_PKGS \
    && apt-get autoremove -y && apt-get clean -y \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

#Enable necessary Apache modules
RUN a2enmod rewrite http2

#Append software required during build here.
RUN BUILD_PKGS="zlib1g-dev libicu-dev g++ libfreetype6-dev libjpeg62-turbo-dev libmcrypt-dev libpng12-dev make" \
    && apt-get update && apt-get install -y --no-install-recommends $BUILD_PKGS \
    && docker-php-ext-install -j$(nproc) iconv mcrypt mbstring exif zip opcache pdo_mysql pcntl \
    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \
    && docker-php-ext-install -j$(nproc) gd \
    && docker-php-ext-configure intl \
    && docker-php-ext-install intl \
    && pecl install xdebug \
    && docker-php-ext-enable xdebug \
    && apt-get autoremove -y $BUILD_PKGS \
    && apt-get clean -y \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

#Configure xdebug.
RUN sed -i '1 a xdebug.remote_autostart=true' /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
RUN sed -i '1 a xdebug.remote_connect_back=1 ' /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
RUN sed -i '1 a xdebug.remote_enable=1' /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
RUN sed -i '1 a xdebug.max_nesting_level = 1200' /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini

#Install blackfire.
RUN export VERSION=`php -r "echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;"` \
    && curl -A "Docker" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/${VERSION} \
    && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp \
    && mv /tmp/blackfire-*.so `php -r "echo ini_get('extension_dir');"`/blackfire.so \
    && echo "extension=blackfire.so\nblackfire.agent_socket=tcp://blackfire:8707" > /etc/php/7.1/mods-available/blackfire.ini \
    && rm -rf /tmp/* /var/tmp/*

#Install composer.
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \
   && composer global require hirak/prestissimo \
   && rm -rf /tmp/* /var/tmp/*

##Populate Environment
COPY 000-default.conf /etc/apache2/sites-available/000-default.conf
#COPY php.ini /usr/local/etc/php/

#Overtake www-data, set zsh shell, append (!) groups sudo and adm
RUN usermod -u $USER_ID www-data -s /bin/zsh -a -G sudo,adm
RUN echo "www-data ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers

#Install oh-my-zsh
ENV TERM=xterm
RUN git clone git://github.com/robbyrussell/oh-my-zsh.git /var/www/.oh-my-zsh

#Fix permissions and umask
RUN chgrp -R www-data /var/www
RUN chmod -R g+rwx /var/www
RUN umask 0007

EXPOSE 80 443
WORKDIR /var/www/html
ENTRYPOINT ["/usr/sbin/apache2ctl", "-D", "FOREGROUND"]
WORKDIR /var/www/html
